// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Navbar /> given a user, it renders the component correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Connect(Navbar))
        store={
          Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
        }
      >
        <Route>
          <Connect(Navbar)
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            store={
              Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              }
            }
          >
            <Navbar
              current_user={
                Object {
                  "user_id": 1,
                }
              }
              dispatch={[Function]}
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location={
                Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/",
                  "search": "",
                }
              }
              match={
                Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                }
              }
              store={
                Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                }
              }
              storeSubscription={
                Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                }
              }
            >
              <div
                className="navbar"
              >
                <div
                  className="navlinks"
                >
                  <NavLink
                    activeClassName="active"
                    aria-current="page"
                    to="/dashboard/form"
                  >
                    <Route
                      path="\\\\/dashboard\\\\/form"
                    >
                      <Link
                        aria-current={null}
                        replace={false}
                        to="/dashboard/form"
                      >
                        <a
                          aria-current={null}
                          href="/dashboard/form"
                          onClick={[Function]}
                        >
                          Input
                        </a>
                      </Link>
                    </Route>
                  </NavLink>
                  <NavLink
                    activeClassName="active"
                    aria-current="page"
                    to="/dashboard/charts"
                  >
                    <Route
                      path="\\\\/dashboard\\\\/charts"
                    >
                      <Link
                        aria-current={null}
                        replace={false}
                        to="/dashboard/charts"
                      >
                        <a
                          aria-current={null}
                          href="/dashboard/charts"
                          onClick={[Function]}
                        >
                          Charts
                        </a>
                      </Link>
                    </Route>
                  </NavLink>
                  <NavLink
                    activeClassName="active"
                    aria-current="page"
                    to="/dashboard/entries"
                  >
                    <Route
                      path="\\\\/dashboard\\\\/entries"
                    >
                      <Link
                        aria-current={null}
                        replace={false}
                        to="/dashboard/entries"
                      >
                        <a
                          aria-current={null}
                          href="/dashboard/entries"
                          onClick={[Function]}
                        >
                          Entries
                        </a>
                      </Link>
                    </Route>
                  </NavLink>
                  <withRouter(Connect(MoreMenu))>
                    <Route>
                      <Connect(MoreMenu)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          }
                        }
                      >
                        <MoreMenu
                          current_user={
                            Object {
                              "user_id": 1,
                            }
                          }
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/",
                              "search": "",
                            }
                          }
                          logout={[Function]}
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            }
                          }
                        >
                          <div>
                            <button
                              className="more"
                              onClick={[Function]}
                            >
                               More 
                            </button>
                            <Popup
                              arrow={true}
                              arrowStyle={Object {}}
                              className=""
                              closeOnDocumentClick={true}
                              closeOnEscape={true}
                              contentStyle={Object {}}
                              defaultOpen={false}
                              keepTooltipInside={false}
                              lockScroll={false}
                              modal={true}
                              mouseEnterDelay={100}
                              mouseLeaveDelay={100}
                              offsetX={0}
                              offsetY={0}
                              on={
                                Array [
                                  "click",
                                ]
                              }
                              onClose={[Function]}
                              onOpen={[Function]}
                              open={false}
                              overlayStyle={Object {}}
                              position="bottom center"
                              trigger={null}
                            />
                          </div>
                        </MoreMenu>
                      </Connect(MoreMenu)>
                    </Route>
                  </withRouter(Connect(MoreMenu))>
                </div>
              </div>
            </Navbar>
          </Connect(Navbar)>
        </Route>
      </withRouter(Connect(Navbar))>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`<Navbar /> given no user, it renders the component correctly 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      Object {
        "key": "testKey",
        "pathname": "/",
      },
    ]
  }
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "testKey",
          "pathname": "/",
          "search": "",
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <withRouter(Connect(Navbar))
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <Route>
        <Connect(Navbar)
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/",
                  "search": "",
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/",
                "search": "",
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
          store={
            Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            }
          }
        >
          <Navbar
            current_user={Object {}}
            dispatch={[Function]}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            store={
              Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              }
            }
            storeSubscription={
              Subscription {
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": undefined,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              }
            }
          >
            <div
              className="navbar"
            >
              <div
                className="navlinks"
              >
                <NavLink
                  activeClassName="active"
                  aria-current="page"
                  to="/login"
                >
                  <Route
                    path="\\\\/login"
                  >
                    <Link
                      aria-current={null}
                      replace={false}
                      to="/login"
                    >
                      <a
                        aria-current={null}
                        href="/login"
                        onClick={[Function]}
                      >
                        Login
                      </a>
                    </Link>
                  </Route>
                </NavLink>
                <NavLink
                  activeClassName="active"
                  aria-current="page"
                  to="/about"
                >
                  <Route
                    path="\\\\/about"
                  >
                    <Link
                      aria-current={null}
                      replace={false}
                      to="/about"
                    >
                      <a
                        aria-current={null}
                        href="/about"
                        onClick={[Function]}
                      >
                        About
                      </a>
                    </Link>
                  </Route>
                </NavLink>
                <NavLink
                  activeClassName="active"
                  aria-current="page"
                  to="/signup"
                >
                  <Route
                    path="\\\\/signup"
                  >
                    <Link
                      aria-current={null}
                      replace={false}
                      to="/signup"
                    >
                      <a
                        aria-current={null}
                        href="/signup"
                        onClick={[Function]}
                      >
                        Signup
                      </a>
                    </Link>
                  </Route>
                </NavLink>
              </div>
            </div>
          </Navbar>
        </Connect(Navbar)>
      </Route>
    </withRouter(Connect(Navbar))>
  </Router>
</MemoryRouter>
`;
