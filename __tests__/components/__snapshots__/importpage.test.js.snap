// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ImportPage /> with redux renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ImportPage
    current_user={
      Object {
        "user_id": null,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="import_container"
      >
        <h2>
          Upload CSV
        </h2>
        <p
          align="center"
        >
          You can upload csv files of previous financial information as long as it has Date, Category, Amount, and Note headers(case sensitive). It works best if the date category is formatted as a date in excel or google sheets before it is exported to csv. Any categories that do not already exist in your account will be created as a regular expense category.
        </p>
        <div
          className="img_container"
        >
          <img
            alt="example format screenshot"
            src="/import_example.png"
          />
        </div>
        <form
          encType="multipart/form-data"
          onSubmit={[Function]}
        >
          <input
            id="fileupload"
            type="file"
          />
          <input
            id="submit"
            type="submit"
            value="submit"
          />
        </form>
      </div>,
      "className": "upper_third",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2>
            Upload CSV
          </h2>,
          <p
            align="center"
          >
            You can upload csv files of previous financial information as long as it has Date, Category, Amount, and Note headers(case sensitive). It works best if the date category is formatted as a date in excel or google sheets before it is exported to csv. Any categories that do not already exist in your account will be created as a regular expense category.
          </p>,
          <div
            className="img_container"
          >
            <img
              alt="example format screenshot"
              src="/import_example.png"
            />
          </div>,
          <form
            encType="multipart/form-data"
            onSubmit={[Function]}
          >
            <input
              id="fileupload"
              type="file"
            />
            <input
              id="submit"
              type="submit"
              value="submit"
            />
          </form>,
        ],
        "className": "import_container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Upload CSV",
          },
          "ref": null,
          "rendered": "Upload CSV",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "align": "center",
            "children": "You can upload csv files of previous financial information as long as it has Date, Category, Amount, and Note headers(case sensitive). It works best if the date category is formatted as a date in excel or google sheets before it is exported to csv. Any categories that do not already exist in your account will be created as a regular expense category.",
          },
          "ref": null,
          "rendered": "You can upload csv files of previous financial information as long as it has Date, Category, Amount, and Note headers(case sensitive). It works best if the date category is formatted as a date in excel or google sheets before it is exported to csv. Any categories that do not already exist in your account will be created as a regular expense category.",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <img
              alt="example format screenshot"
              src="/import_example.png"
            />,
            "className": "img_container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "example format screenshot",
              "src": "/import_example.png",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                id="fileupload"
                type="file"
              />,
              <input
                id="submit"
                type="submit"
                value="submit"
              />,
            ],
            "encType": "multipart/form-data",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "fileupload",
                "type": "file",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "submit",
                "type": "submit",
                "value": "submit",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="import_container"
        >
          <h2>
            Upload CSV
          </h2>
          <p
            align="center"
          >
            You can upload csv files of previous financial information as long as it has Date, Category, Amount, and Note headers(case sensitive). It works best if the date category is formatted as a date in excel or google sheets before it is exported to csv. Any categories that do not already exist in your account will be created as a regular expense category.
          </p>
          <div
            className="img_container"
          >
            <img
              alt="example format screenshot"
              src="/import_example.png"
            />
          </div>
          <form
            encType="multipart/form-data"
            onSubmit={[Function]}
          >
            <input
              id="fileupload"
              type="file"
            />
            <input
              id="submit"
              type="submit"
              value="submit"
            />
          </form>
        </div>,
        "className": "upper_third",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2>
              Upload CSV
            </h2>,
            <p
              align="center"
            >
              You can upload csv files of previous financial information as long as it has Date, Category, Amount, and Note headers(case sensitive). It works best if the date category is formatted as a date in excel or google sheets before it is exported to csv. Any categories that do not already exist in your account will be created as a regular expense category.
            </p>,
            <div
              className="img_container"
            >
              <img
                alt="example format screenshot"
                src="/import_example.png"
              />
            </div>,
            <form
              encType="multipart/form-data"
              onSubmit={[Function]}
            >
              <input
                id="fileupload"
                type="file"
              />
              <input
                id="submit"
                type="submit"
                value="submit"
              />
            </form>,
          ],
          "className": "import_container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Upload CSV",
            },
            "ref": null,
            "rendered": "Upload CSV",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "align": "center",
              "children": "You can upload csv files of previous financial information as long as it has Date, Category, Amount, and Note headers(case sensitive). It works best if the date category is formatted as a date in excel or google sheets before it is exported to csv. Any categories that do not already exist in your account will be created as a regular expense category.",
            },
            "ref": null,
            "rendered": "You can upload csv files of previous financial information as long as it has Date, Category, Amount, and Note headers(case sensitive). It works best if the date category is formatted as a date in excel or google sheets before it is exported to csv. Any categories that do not already exist in your account will be created as a regular expense category.",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="example format screenshot"
                src="/import_example.png"
              />,
              "className": "img_container",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "example format screenshot",
                "src": "/import_example.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  id="fileupload"
                  type="file"
                />,
                <input
                  id="submit"
                  type="submit"
                  value="submit"
                />,
              ],
              "encType": "multipart/form-data",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "id": "fileupload",
                  "type": "file",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "id": "submit",
                  "type": "submit",
                  "value": "submit",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "form",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
